import Card from './Card.ripple';
import RecordingControls from '../controls/RecordingControls.ripple';
import type { Context, Settings } from '../../types.d';
import RecordingAPI from '../../lib/index';

export default component PreviewCard(props: { $context: Context, $settings: Settings }) {
	<Card>
		<div id='preview' onClick={() => {
				if (!props.$context.$selectedSource) RecordingAPI.selectSource(props.$settings).then(v => props.$context.$selectedSource = v);
			}}>
			if (props.$context.$selectedSource?.active) {
				try {
					<video srcObject={props.$context.$selectedSource} autoplay={true}></video>
					<button id='stop-preview-button' class="danger" type="button" onClick={() => {
						setTimeout(() => props.$context.$selectedSource = undefined, 100);
					}}>{'Stop preview'}</button>
				} catch (err) {
					<div id="alert">
						<img src='/icons/error.svg' alt='' />
						<strong>{'Preview has crashed'}</strong>
					</div>
				}

			} else {
				<div id="alert">
					<img src='/icons/select_window.svg' alt='Select a source to record' />
					<strong>{'Select a source to continue'}</strong>
				</div>
			}
		</div>
		<RecordingControls $context={props.$context} $settings={props.$settings} />
	</Card>
}