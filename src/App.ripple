import PreviewCard from './components/cards/PreviewCard.ripple';
import SettingsCard from './components/cards/SettingsCard.ripple';
import type { Context, Settings } from './types.d';
import { effect } from 'ripple';

export component App() {
	try {
		let context: Context = {
			$selectedSource: undefined,
			$isRecording: false,
			$isPaused: false,
			$previewURL: undefined,
		};

		let settings: Settings = {
			$videoBitrate: 5 * 1000 * 1000, // 5 Mbps
			$fps: 60,
			$audioBitrate: 160 * 1000, // 160 Kpbs
			$mimeType: "video/webm",

			$skipCountdown: false
		}

		let firstRun = true;

		try {
			if (firstRun) {
				const saved_settings = JSON.parse(localStorage.getItem("settings"));

				settings.$videoBitrate = saved_settings.$videoBitrate;
				settings.$audioBitrate = saved_settings.$audioBitrate;
				settings.$mimeType = saved_settings.$mimeType;
				firstRun = false;
			};
		} catch (err) {
			console.warn("Couldn't load saved settings");
		}
		
		effect(() => {
			console.log(settings.$videoBitrate, settings.$audioBitrate, settings.$mimeType, settings.$fps, settings.$skipCountdown); // required as Ripple doesn't allow objects to be reactive
			localStorage.setItem("settings", JSON.stringify(settings));
		})

		<main>
			<h1>{'Web Capture'}</h1>
			<PreviewCard $context={context} $settings={settings} />
			<SettingsCard $context={context} $settings={settings} />
			
			if (import.meta.env.DEV) {
				<button type="button" onClick={() => console.log(context, settings)}>{'Debug'}</button>
			}
		</main>

		/* <SettingsCard /> */
		<style>
			main {
				padding: 12px;
				margin: auto 0;
				max-width: 840px;
				
				display: flex;
				justify-content: center;
				align-items: center;
				flex-direction: column;
				gap: 12px;
			}
			h1 {
				margin-bottom: 12px;
			}
		</style>
	} catch (err) {
		console.error(err);

		<main>
			<h1>{'An error happened!'}</h1>
			<code>{err}</code>
		</main>
	}
}